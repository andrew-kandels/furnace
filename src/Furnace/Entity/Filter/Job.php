<?php
/**
 * Contain Project
 *
 * This source file is subject to the BSD license bundled with
 * this package in the LICENSE.txt file. It is also available
 * on the world-wide-web at http://www.opensource.org/licenses/bsd-license.php.
 * If you are unable to receive a copy of the license or have 
 * questions concerning the terms, please send an email to
 * me@andrewkandels.com.
 *
 * @category    akandels
 * @package     contain
 * @author      Andrew Kandels (me@andrewkandels.com)
 * @copyright   Copyright (c) 2013 Andrew P. Kandels (http://andrewkandels.com)
 * @license     http://www.opensource.org/licenses/bsd-license.php BSD License
 * @link        http://andrewkandels.com/contain
 */

namespace Furnace\Entity\Filter;

use Zend\InputFilter\InputFilter;
use Zend\InputFilter\Factory as InputFactory;

/**
 * Job Entity InputFilter (auto-generated by the Contain module)
 *
 * This instance should not be edited directly. Edit the definition file instead 
 * and recompile.
 */
class Job extends InputFilter
{
    /**
     * Construct and initialize the filters for the entity properties.
     *
     * @return $this
     */
    public function __construct()
    {
        $factory = new InputFactory();

        $this->add($factory->createInput(array(
            'name' => 'name',
            'required' => true,
            'allow_empty' => false,
            'validators' => array (
  0 => 
  array (
    'name' => 'Regex',
    'options' => 
    array (
      'pattern' => '/^[a-zA-Z][a-zA-Z0-9-_]*$/',
      'messages' => 
      array (
        'regexNotMatch' => 'Job names should start with a letter and contain only letters, numbers, underscores and dashes.',
      ),
    ),
  ),
  1 => 
  array (
    'name' => 'StringLength',
    0 => 
    array (
      'min' => 0,
      'max' => 60,
    ),
  ),
),
            'filters' => array (
  0 => 
  array (
    'name' => 'StringTrim',
  ),
),
        )));

        $this->add($factory->createInput(array(
            'name' => 'description',
            'allow_empty' => true,
            'validators' => array (
  0 => 
  array (
    'name' => 'StringLength',
    0 => 
    array (
      'min' => 0,
      'max' => 140,
    ),
  ),
),
            'filters' => array (
  0 => 
  array (
    'name' => 'StringTrim',
  ),
  1 => 
  array (
    'name' => 'StripTags',
  ),
),
        )));

        $this->add($factory->createInput(array(
            'name' => 'priority',
            'required' => true,
            'allow_empty' => false,
            'validators' => array (
  0 => 
  array (
    'name' => 'Digits',
  ),
),
            'filters' => array (
  0 => 
  array (
    'name' => 'Digits',
  ),
),
        )));

        $this->add($factory->createInput(array(
            'name' => 'schedule',
            'required' => true,
            'allow_empty' => false,
        )));

        $this->add($factory->createInput(array(
            'name' => 'dependencies',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'startAt',
            'required' => true,
            'allow_empty' => false,
        )));

        $this->add($factory->createInput(array(
            'name' => 'queuedAt',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'startedAt',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'completedAt',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'percentComplete',
            'allow_empty' => true,
            'validators' => array (
  0 => 
  array (
    'name' => 'Digits',
  ),
),
        )));

        $this->add($factory->createInput(array(
            'name' => 'error',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'pidOf',
            'allow_empty' => true,
            'validators' => array (
  0 => 
  array (
    'name' => 'Digits',
  ),
),
        )));

        $this->add($factory->createInput(array(
            'name' => 'pidCmd',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'messages',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'history',
            'allow_empty' => true,
        )));

        $this->add($factory->createInput(array(
            'name' => 'logs',
            'allow_empty' => true,
        )));
    }
}
